{"remainingRequest":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/babel-loader/lib/index.js!/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/src/components/dataCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/src/components/dataCard.vue","mtime":1630872812000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { GChart } from \"vue-google-charts\";\nimport fullscreen from \"vue-fullscreen\";\nimport Vue from \"vue\";\nVue.use(fullscreen);\nexport default {\n  components: {\n    GChart: GChart\n  },\n  props: {\n    name: {\n      type: String,\n      required: true,\n      default: \"\"\n    }\n  },\n  data: function data() {\n    return {\n      icon: null,\n      title: null,\n      value: null,\n      unit: null,\n      visualisation: false,\n      gChartData: false,\n      chartOptions: {\n        hAxis: {\n          title: \"Time\",\n          titleTextStyle: {\n            color: \"#333\"\n          }\n        },\n        vAxis: {\n          title: this.name\n        },\n        colors: [this.$vuetify.theme.themes.light.primary.base, this.$vuetify.theme.themes.light.secondary],\n        backgroundColor: this.$vuetify.theme.themes.light.accent,\n        legend: \"none\"\n      },\n      fullscreen: false,\n      fullscreenIcon: \"mdi-fullscreen\"\n    };\n  },\n  computed: {\n    measurement: function measurement() {\n      return this.$store.getters.mostRecentMeasurement(this.name);\n    },\n    measurements: function measurements() {\n      return this.$store.getters.gChartForMeasurements(this.name);\n    },\n    chartTitle: function chartTitle() {\n      return \"\".concat(this.$options.filters.capitalise(this.name), \" (\").concat(this.unit, \")\");\n    }\n  },\n  watch: {\n    chartTitle: function chartTitle() {\n      this.chartOptions.vAxis.title = this.chartTitle;\n    }\n  },\n  methods: {\n    toggle: function toggle() {\n      this.$refs[\"fullscreen\"].toggle();\n    },\n    fullscreenChange: function fullscreenChange(fullscreen) {\n      this.fullscreenIcon = fullscreen ? \"mdi-fullscreen-exit\" : \"mdi-fullscreen\";\n      this.fullscreen = fullscreen;\n    }\n  },\n  filters: {\n    capitalise: function capitalise(value) {\n      if (!value) return \"\";\n      value = value.split(\"_\").map(function (el) {\n        return el.charAt(0).toUpperCase() + el.slice(1);\n      }).join(\" \");\n      return value;\n    }\n  }\n};",{"version":3,"sources":["dataCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,SAAA,MAAA,QAAA,mBAAA;AACA,OAAA,UAAA,MAAA,gBAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,GAAA,CAAA,GAAA,CAAA,UAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AADA,GAJA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,aAAA,EAAA,KALA;AAMA,MAAA,UAAA,EAAA,KANA;AAOA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA;AAAA,UAAA,KAAA,EAAA,MAAA;AAAA,UAAA,cAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA;AAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,SAFA;AAGA,QAAA,MAAA,EAAA,CACA,KAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IADA,EAEA,KAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAFA,CAHA;AAOA,QAAA,eAAA,EAAA,KAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAPA;AAQA,QAAA,MAAA,EAAA;AARA,OAPA;AAiBA,MAAA,UAAA,EAAA,KAjBA;AAkBA,MAAA,cAAA,EAAA;AAlBA,KAAA;AAoBA,GAhCA;AAiCA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,KAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,KAAA,IAAA,CAAA;AACA,KANA;AAOA,IAAA,UAPA,wBAOA;AACA,uBAAA,KAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,KAAA,IAAA,CAAA,eAAA,KAAA,IAAA;AACA;AATA,GAjCA;AA4CA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,YAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,UAAA;AACA;AAHA,GA5CA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,MAAA;AACA,KAHA;AAIA,IAAA,gBAJA,4BAIA,UAJA,EAIA;AACA,WAAA,cAAA,GAAA,UAAA,GACA,qBADA,GAEA,gBAFA;AAGA,WAAA,UAAA,GAAA,UAAA;AACA;AATA,GAjDA;AA4DA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,OAAA,EAAA;AACA,MAAA,KAAA,GAAA,KAAA,CACA,KADA,CACA,GADA,EAEA,GAFA,CAEA,UAAA,EAAA;AAAA,eAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAAA,OAFA,EAGA,IAHA,CAGA,GAHA,CAAA;AAIA,aAAA,KAAA;AACA;AARA;AA5DA,CAAA","sourcesContent":["<template>\n  <v-card color=\"primary\" dark>\n    <v-responsive :aspect-ratio=\"1 / 1\">\n      <v-card-title>\n        <v-toolbar flat dark color=\"primary\">\n          <v-icon large left color=\"secondary\" v-if=\"measurement\">\n            {{ measurement.icon }}\n          </v-icon>\n          <v-toolbar-title class=\"white--text\">{{\n            name | capitalise\n          }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn @click.stop=\"toggle\" icon color=\"accent\" v-show=\"visualisation\">\n            <v-icon>{{ fullscreenIcon }}</v-icon>\n          </v-btn>\n          <v-switch\n            color=\"accent\"\n            class=\"mt-4\"\n            v-model=\"visualisation\"\n          ></v-switch>\n        </v-toolbar>\n      </v-card-title>\n        <v-card-text\n          v-if=\"!visualisation\"\n          class=\"text-center align-center\"\n        >\n          <div v-if=\"measurement\" class=\"display-1 font-weight-black \"\n            >{{ measurement.value }} {{ measurement.unit }}</div\n          >\n          <v-progress-circular v-else indeterminate color=\"accent\" />\n        </v-card-text>\n        <v-card-text v-else class=\"text-center\">\n            <div v-if=\"measurements\">\n              <fullscreen ref=\"fullscreen\" @change=\"fullscreenChange\">\n                <v-btn\n                  @click.stop=\"toggle\"\n                  v-show=\"fullscreen\"\n                  class=\"fullGraphButton\"\n                  icon\n                >\n                  <v-icon large>{{ fullscreenIcon }}</v-icon>\n                </v-btn>\n                <GChart\n                  type=\"LineChart\"\n                  :data=\"[['Time', 'Value']].concat(measurements)\"\n                  :options=\"chartOptions\"\n                  v-bind:style=\"{ height: '100vh'}\"\n                  v-if=\"fullscreen\"\n                />\n              </fullscreen>\n              <GChart\n                type=\"LineChart\"\n                v-if=\"!fullscreen\"\n                :data=\"[['Time', 'Value']].concat(measurements)\"\n                :options=\"chartOptions\"\n                v-bind:style=\"{ height: '100%'}\"\n              />\n            </div>\n            <v-progress-circular v-else indeterminate color=\"accent\" />\n        </v-card-text>\n    </v-responsive>\n  </v-card>\n</template>\n\n<script type=\"text/javascript\">\nimport { GChart } from \"vue-google-charts\";\nimport fullscreen from \"vue-fullscreen\";\nimport Vue from \"vue\";\nVue.use(fullscreen);\n\nexport default {\n  components: {\n    GChart,\n  },\n  props: {\n    name: {\n      type: String,\n      required: true,\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      icon: null,\n      title: null,\n      value: null,\n      unit: null,\n      visualisation: false,\n      gChartData: false,\n      chartOptions: {\n        hAxis: { title: \"Time\", titleTextStyle: { color: \"#333\" } },\n        vAxis: { title: this.name },\n        colors: [\n          this.$vuetify.theme.themes.light.primary.base,\n          this.$vuetify.theme.themes.light.secondary,\n        ],\n        backgroundColor: this.$vuetify.theme.themes.light.accent,\n        legend: \"none\",\n      },\n      fullscreen: false,\n      fullscreenIcon: \"mdi-fullscreen\"\n    };\n  },\n  computed: {\n    measurement (){\n      return this.$store.getters.mostRecentMeasurement(this.name);\n    },\n    measurements() {\n      return this.$store.getters.gChartForMeasurements(this.name)\n    },\n    chartTitle() {\n      return `${this.$options.filters.capitalise(this.name)} (${this.unit})`;\n    },\n  },\n  watch: {\n    chartTitle() {\n      this.chartOptions.vAxis.title = this.chartTitle;\n    },\n  },\n  methods: {\n    toggle() {\n      this.$refs[\"fullscreen\"].toggle();\n    },\n    fullscreenChange(fullscreen) {\n      this.fullscreenIcon = fullscreen\n        ? \"mdi-fullscreen-exit\"\n        : \"mdi-fullscreen\";\n      this.fullscreen = fullscreen;\n    },\n  },\n  filters: {\n    capitalise: function (value) {\n      if (!value) return \"\";\n      value = value\n        .split(\"_\")\n        .map((el) => el.charAt(0).toUpperCase() + el.slice(1))\n        .join(\" \");\n      return value;\n    },\n  },\n};\n</script>\n\n\n<style lang=\"css\">\n.fullGraphButton {\n  z-index: 200;\n  float: right;\n  padding-right: 20px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}