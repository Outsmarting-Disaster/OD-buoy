{"remainingRequest":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/babel-loader/lib/index.js!/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/src/views/Trends.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/src/views/Trends.vue","mtime":1630872812000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/yellow/Developer/smart-buoy-master/src/baseStation/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { GChart } from 'vue-google-charts';\nexport default {\n  components: {\n    GChart: GChart\n  },\n  data: function data() {\n    return {\n      chosenMeasurements: [],\n      measurements: this.prettifyMeasurementNames(),\n      gChartData: [['Time', 'Value'], ['12:00:01', 5]],\n      startDate: this.getYesterday(),\n      endDate: new Date().toISOString().substr(0, 10),\n      startDateMenu: false,\n      endDateMenu: false,\n      chartOptions: {\n        chart: {\n          title: this.name,\n          subtitle: this.name\n        },\n        backgroundColor: this.$vuetify.theme.themes.light.accent\n      },\n      chartData: [['Date', 'Value'], ['12/01/01', 12], ['13/01/01', 13]],\n      ticksLabels: ['Min', 'Hours', 'Days'],\n      granularity: 2\n    };\n  },\n  computed: {},\n  watch: {\n    chosenMeasurements: function chosenMeasurements() {\n      this.getChartData();\n    },\n    startDate: function startDate() {\n      this.getChartData();\n    },\n    endDate: function endDate() {\n      this.getChartData();\n    },\n    granularity: function granularity() {\n      this.getChartData();\n    }\n  },\n  methods: {\n    getYesterday: function getYesterday() {\n      var d = new Date();\n      d.setDate(d.getDate() - 1);\n      return d.toISOString().substr(0, 10);\n    },\n    prettifyMeasurementNames: function prettifyMeasurementNames() {\n      return this.$store.getters.trendMeasurementNames.map(function (name) {\n        return name.split('_');\n      }).map(function (name) {\n        return name.map(function (el) {\n          return el.charAt(0).toUpperCase() + el.slice(1);\n        }).join(' ');\n      });\n    },\n    getChartData: function getChartData() {\n      var _this = this;\n\n      var measurementNames;\n      if (this.chosenMeasurements.length == 0) return;else {\n        measurementNames = this.chosenMeasurements.map(function (name) {\n          return name.split(' ');\n        }).map(function (name) {\n          return name.map(function (el) {\n            return el.charAt(0).toLowerCase() + el.slice(1);\n          }).join(' ');\n        });\n      }\n\n      _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var payload, baseURL, rawResponse, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                payload = {};\n                payload.chosenMeasurements = measurementNames;\n                payload.startDate = _this.startDate;\n                payload.endDate = _this.endDate;\n                payload.granularity = _this.granularity;\n                baseURL = _this.$store.state.piUrl;\n                _context.prev = 6;\n                _context.next = 9;\n                return fetch(\"\".concat(baseURL, \"/trends\"), {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(payload)\n                });\n\n              case 9:\n                rawResponse = _context.sent;\n                _context.next = 12;\n                return rawResponse.json();\n\n              case 12:\n                data = _context.sent;\n                console.log(data);\n                data = data.map(function (el, idx) {\n                  if (idx !== 0) {\n                    el[0] = new Date(el[0]);\n                    return el;\n                  } else {\n                    return el;\n                  }\n                });\n                _this.chartData = data;\n                _context.next = 21;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](6);\n                console.log(\"ERR \", _context.t0);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 18]]);\n      }))();\n    },\n    downloadCSV: function downloadCSV() {\n      var csv = '';\n\n      for (var i = 0; i < this.chartData.length; i++) {\n        for (var j = 0; j < this.chartData[i].length; j++) {\n          csv += this.chartData[i][j] + ',';\n        }\n\n        csv += '\\n';\n      }\n\n      var element = document.createElement('a');\n      var name = \"\".concat(this.chosenMeasurements.join(' '), \" \").concat(this.startDate, \"-\").concat(this.endDate, \".csv\");\n      element.setAttribute('download', name);\n      element.setAttribute('href', 'data:application/octet-stream,' + encodeURIComponent(csv));\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }\n  }\n};",{"version":3,"sources":["Trends.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA,SAAA,MAAA,QAAA,mBAAA;AAEA,eAAA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,KAAA,wBAAA,EAFA;AAGA,MAAA,UAAA,EAAA,CAAA,CAAA,MAAA,EAAA,OAAA,CAAA,EAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAHA;AAIA,MAAA,SAAA,EAAA,KAAA,YAAA,EAJA;AAKA,MAAA,OAAA,EAAA,IAAA,IAAA,GAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CALA;AAMA,MAAA,aAAA,EAAA,KANA;AAOA,MAAA,WAAA,EAAA,KAPA;AAQA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,KAAA,IADA;AAEA,UAAA,QAAA,EAAA,KAAA;AAFA,SADA;AAMA,QAAA,eAAA,EAAA,KAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AANA,OARA;AAgBA,MAAA,SAAA,EAAA,CACA,CAAA,MAAA,EAAA,OAAA,CADA,EAEA,CAAA,UAAA,EAAA,EAAA,CAFA,EAGA,CAAA,UAAA,EAAA,EAAA,CAHA,CAhBA;AAqBA,MAAA,WAAA,EAAA,CAAA,KAAA,EAAA,OAAA,EAAA,MAAA,CArBA;AAsBA,MAAA,WAAA,EAAA;AAtBA,KAAA;AAwBA,GA9BA;AA+BA,EAAA,QAAA,EAAA,EA/BA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,WAAA,YAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,WAAA,YAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,WAAA,YAAA;AACA,KATA;AAUA,IAAA,WAVA,yBAUA;AACA,WAAA,YAAA;AACA;AAZA,GAjCA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,CAAA,GAAA,IAAA,IAAA,EAAA;AACA,MAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,OAAA,KAAA,CAAA;AACA,aAAA,CAAA,CAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,KALA;AAMA,IAAA,wBANA,sCAMA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,CACA,GADA,CAEA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA,OAFA,EAEA,GAFA,CAGA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,GAAA,CACA,UAAA,EAAA;AAAA,iBAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAAA,SADA,CAAA,CAEA,IAFA,CAEA,GAFA,CAAA;AAAA,OAHA,CAAA;AAOA,KAdA;AAeA,IAAA,YAfA,0BAeA;AAAA;;AACA,UAAA,gBAAA;AACA,UAAA,KAAA,kBAAA,CAAA,MAAA,IAAA,CAAA,EAAA,OAAA,KACA;AACA,QAAA,gBAAA,GAAA,KAAA,kBAAA,CAAA,GAAA,CACA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA,SADA,EACA,GADA,CAEA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,GAAA,CACA,UAAA,EAAA;AAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAAA,WADA,CAAA,CAEA,IAFA,CAEA,GAFA,CAAA;AAAA,SAFA,CAAA;AAMA;;AAEA,8DAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,EADA;AAEA,gBAAA,OAAA,CAAA,kBAAA,GAAA,gBAAA;AACA,gBAAA,OAAA,CAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AACA,gBAAA,OAAA,CAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AACA,gBAAA,OAAA,CAAA,WAAA,GAAA,KAAA,CAAA,WAAA;AACA,gBAAA,OANA,GAMA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KANA;AAAA;AAAA;AAAA,uBAQA,KAAA,WAAA,OAAA,cAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,OAAA,EAAA;AACA,8BAAA,kBADA;AAEA,oCAAA;AAFA,mBAFA;AAMA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA;AANA,iBAAA,CARA;;AAAA;AAQA,gBAAA,WARA;AAAA;AAAA,uBAgBA,WAAA,CAAA,IAAA,EAhBA;;AAAA;AAgBA,gBAAA,IAhBA;AAkBA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,gBAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA,GAAA,EAAA;AACA,sBAAA,GAAA,KAAA,CAAA,EAAA;AACA,oBAAA,EAAA,CAAA,CAAA,CAAA,GAAA,IAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,2BAAA,EAAA;AACA,mBAHA,MAIA;AACA,2BAAA,EAAA;AACA;AACA,iBARA,CAAA;AASA,gBAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AA5BA;AAAA;;AAAA;AAAA;AAAA;AAgCA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA;;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;AAqCA,KAhEA;AAiEA,IAAA,WAjEA,yBAiEA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,SAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,GAAA,IAAA,KAAA,SAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA;AACA;;AACA,QAAA,GAAA,IAAA,IAAA;AACA;;AACA,UAAA,OAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,UAAA,IAAA,aAAA,KAAA,kBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,cAAA,KAAA,SAAA,cAAA,KAAA,OAAA,SAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,UAAA,EAAA,IAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,MAAA,EAAA,mCAAA,kBAAA,CAAA,GAAA,CAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,KAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,OAAA;AACA;AAjFA;AA/CA,CAAA","sourcesContent":["<template lang=\"html\">\n  <div class=\"trends\">\n     <v-container grid-list-md text-xs-center>\n      <v-layout row wrap>\n        <v-flex xs12 sm6 md5 ma-1>\n          <v-subheader>Measurements</v-subheader>\n          <v-select\n            v-model=\"chosenMeasurements\"\n            :items=\"measurements\"\n            attach\n            chips\n            multiple\n          ></v-select>\n        </v-flex>\n\n        <v-flex xs12 sm6 md2 ma-1>\n          <v-subheader>Start Date</v-subheader>\n          <v-menu\n            v-model=\"startDateMenu\"\n            :close-on-content-click=\"false\"\n            :nudge-right=\"40\"\n            lazy\n            transition=\"scale-transition\"\n            offset-y\n            full-width\n            min-width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on }\">\n              <v-text-field\n                v-model=\"startDate\"\n                prepend-icon=\"mdi-calendar-search\"\n                readonly\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"startDate\" @input=\"startDateMenu = false\"></v-date-picker>\n          </v-menu>\n        </v-flex>\n\n        <v-flex xs12 sm6 md2 ma-1>\n          <v-subheader>End Date</v-subheader>\n          <v-menu\n            v-model=\"endDateMenu\"\n            :close-on-content-click=\"false\"\n            :nudge-right=\"40\"\n            lazy\n            transition=\"scale-transition\"\n            offset-y\n            full-width\n            min-width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on }\">\n              <v-text-field\n                v-model=\"endDate\"\n                prepend-icon=\"mdi-calendar-search\"\n                readonly\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"endDate\" @input=\"endDateMenu = false\"></v-date-picker>\n          </v-menu>\n        </v-flex>\n\n        <v-flex md2 ma-1>\n          <v-subheader>Granularity</v-subheader>\n          <v-slider\n           v-model=\"granularity\"\n           :tick-labels=\"ticksLabels\"\n           :max=\"2\"\n           step=\"1\"\n           ticks=\"always\"\n           tick-size=\"4\"\n         ></v-slider>\n        </v-flex>\n\n\n        <v-flex xs12>\n          <v-card color=\"primary\" pa-5>\n            <v-card-text>\n              <GChart\n              id=\"trendsChart\"\n              :style=\"{height: '50vh'}\"\n              type=\"LineChart\"\n              :data=\"chartData\"\n              :options=\"chartOptions\"\n              />\n            </v-card-text>\n            <v-card-actions>\n\n              <v-btn\n                 absolute\n                 dark\n                 fab\n                 bottom\n                 right\n                 color=\"pink\"\n                 @click=\"downloadCSV\"\n               >\n                 <v-icon>mdi-download</v-icon>\n               </v-btn>\n\n            </v-card-actions>\n          </v-card>\n\n        </v-flex>\n\n\n        <v-spacer></v-spacer>\n      </v-layout>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { GChart } from 'vue-google-charts'\n\nexport default {\n\n  components: {\n    GChart,\n  },\n  data (){\n    return {\n      chosenMeasurements: [],\n      measurements: this.prettifyMeasurementNames(),\n      gChartData: [['Time', 'Value'], ['12:00:01', 5]],\n      startDate: this.getYesterday(),\n      endDate: new Date().toISOString().substr(0, 10),\n      startDateMenu: false,\n      endDateMenu: false,\n      chartOptions: {\n        chart: {\n          title: this.name,\n          subtitle: this.name,\n\n        },\n        backgroundColor: this.$vuetify.theme.themes.light.accent,\n      },\n      chartData: [\n        ['Date', 'Value'],\n        ['12/01/01', 12],\n        ['13/01/01', 13],\n      ],\n      ticksLabels: ['Min', 'Hours', 'Days'],\n      granularity: 2,\n    }\n  },\n  computed: {\n  },\n  watch: {\n    chosenMeasurements(){\n      this.getChartData();\n    },\n    startDate(){\n      this.getChartData()\n    },\n    endDate(){\n      this.getChartData()\n    },\n    granularity(){\n      this.getChartData()\n    }\n  },\n  methods: {\n    getYesterday(){\n      let d = new Date()\n      d.setDate(d.getDate() - 1);\n      return d.toISOString().substr(0, 10);\n    },\n    prettifyMeasurementNames(){\n      return this.$store.getters.trendMeasurementNames\n      .map(\n        name => name.split('_')).map(\n          name => (name.map(\n            el=> (el.charAt(0).toUpperCase() + el.slice(1))\n          )).join(' ')\n        )\n    },\n    getChartData(){\n      let measurementNames;\n      if (this.chosenMeasurements.length == 0) return;\n      else {\n        measurementNames = this.chosenMeasurements.map(\n          name => name.split(' ')).map(\n            name => (name.map(\n              el=> (el.charAt(0).toLowerCase() + el.slice(1))\n            )).join(' ')\n          )\n      }\n\n      (async () => {\n        let payload = {};\n        payload.chosenMeasurements = measurementNames;\n        payload.startDate = this.startDate;\n        payload.endDate = this.endDate;\n        payload.granularity = this.granularity;\n        const baseURL = this.$store.state.piUrl;\n        try{\n          const rawResponse = await fetch(`${baseURL}/trends`, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          });\n          let data = await rawResponse.json();\n\n          console.log(data);\n          data = data.map( (el, idx) => {\n            if (idx!==0){\n              el[0] = new Date(el[0]);\n              return el\n            }\n            else{\n              return el\n            }\n          });\n          this.chartData = data;\n\n        }\n        catch(err){\n          console.log(\"ERR \", err);\n        }\n\n      })();\n\n    },\n    downloadCSV(){\n      let csv = '';\n      for(let i = 0; i < this.chartData.length; i++) {\n        for(let j = 0; j < this.chartData[i].length; j++) {\n          csv += this.chartData[i][j] + ',';\n        }\n        csv += '\\n';\n      }\n      const element = document.createElement('a');\n      const name = `${this.chosenMeasurements.join(' ')} ${this.startDate}-${this.endDate}.csv`;\n      element.setAttribute('download', name);\n      element.setAttribute('href', 'data:application/octet-stream,' + encodeURIComponent(csv));\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views"}]}