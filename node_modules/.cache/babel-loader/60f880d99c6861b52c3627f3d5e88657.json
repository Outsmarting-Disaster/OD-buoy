{"remainingRequest":"/home/yellow/Developer/OD-buoy/node_modules/babel-loader/lib/index.js!/home/yellow/Developer/OD-buoy/node_modules/eslint-loader/index.js??ref--13-0!/home/yellow/Developer/OD-buoy/src/store.js","dependencies":[{"path":"/home/yellow/Developer/OD-buoy/src/store.js","mtime":1630872812000},{"path":"/home/yellow/Developer/OD-buoy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yellow/Developer/OD-buoy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/yellow/Developer/OD-buoy/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    piUrl: 'http://localhost:5000',\n    measurements: {\n      location: {\n        name: 'Location',\n        data: [[new Date(), [12.015089, -61.697963]]],\n        unit: '',\n        icon: 'mdi-crosshairs-gps',\n        trend: false\n      },\n      wave_height: {\n        name: 'Wave Height',\n        data: [[new Date(), 4.1], [new Date(), 4.1]],\n        unit: 'm',\n        icon: 'mdi-current-ac',\n        trend: true\n      },\n      wave_period: {\n        name: 'Wave Period',\n        data: [[new Date(), 3.2], [new Date(), 3.2]],\n        unit: 's',\n        icon: 'mdi-current-ac',\n        trend: true\n      },\n      wave_power: {\n        name: 'Wave Power',\n        data: [[new Date(), 25.8], [new Date(), 25.8]],\n        unit: 'kW/m',\n        icon: 'mdi-current-ac',\n        trend: true\n      },\n      air_temperature: {\n        name: 'Air Temperature',\n        data: [[new Date(), 32.1], [new Date(), 32.1]],\n        unit: '°C',\n        icon: 'mdi-thermometer',\n        trend: true\n      },\n      water_temperature: {\n        name: 'Water Temperature',\n        data: [[new Date(), 16.4], [new Date(), 16.4]],\n        unit: '°C',\n        icon: 'mdi-thermometer',\n        trend: true\n      },\n      voltage: {\n        name: 'Voltage',\n        data: [[new Date(), 5.4], [new Date(), 5.4]],\n        unit: 'V',\n        icon: 'mdi-battery',\n        trend: true\n      },\n      current: {\n        name: 'Current',\n        data: [[new Date(), -200], [new Date(), -200]],\n        unit: 'mA',\n        icon: 'mdi-power-plug',\n        trend: true\n      },\n      wait_time: {\n        name: 'Wait Time',\n        data: [[new Date(), 2], [new Date(), 2]],\n        unit: 's',\n        icon: 'mdi-camera-timer',\n        trend: true\n      }\n    }\n  },\n  getters: {\n    measurementNames: function measurementNames(state) {\n      return Object.keys(state.measurements);\n    },\n    trendMeasurementNames: function trendMeasurementNames(state) {\n      return Object.entries(state.measurements).filter(function (el) {\n        return el[1].trend;\n      }).map(function (el) {\n        return el[0];\n      });\n    },\n    recentUpdates: function recentUpdates(state) {\n      var result = [];\n\n      var _loop = function _loop() {\n        var measurement = _Object$values[_i];\n        measurement.data.forEach(function (dataPoint) {\n          if (dataPoint.length < 1) return;\n\n          try {\n            result.push({\n              name: measurement.name,\n              dtime: dataPoint[0],\n              value: dataPoint[1],\n              time: \"\".concat(dataPoint[0].getHours(), \":\").concat(dataPoint[0].getMinutes(), \":\").concat(dataPoint[0].getSeconds()),\n              icon: measurement.icon\n            });\n          } catch (e) {\n            dataPoint[0] = new Date(dataPoint[0]);\n            result.push({\n              name: measurement.name,\n              dtime: dataPoint[0],\n              value: dataPoint[1],\n              time: \"\".concat(dataPoint[0].getHours(), \":\").concat(dataPoint[0].getMinutes(), \":\").concat(dataPoint[0].getSeconds()),\n              icon: measurement.icon\n            });\n          }\n        });\n      };\n\n      for (var _i = 0, _Object$values = Object.values(state.measurements); _i < _Object$values.length; _i++) {\n        _loop();\n      }\n\n      result.sort(function (a, b) {\n        return new Date(b.dtime) - new Date(a.dtime);\n      });\n      return result.slice(0, 20);\n    },\n    current_value_of_measurement: function current_value_of_measurement(state) {\n      return function (name) {\n        return state.measurements[name].data.slice(-1)[0][1];\n      };\n    },\n    mostRecentMeasurement: function mostRecentMeasurement(state) {\n      return function (name) {\n        var measurementInfo = state.measurements[name];\n\n        if (measurementInfo.data.length > 0 && measurementInfo.data[0].length > 0) {\n          var data_point = measurementInfo.data.slice(-1)[0];\n          return {\n            time: data_point[0],\n            value: data_point[1],\n            unit: measurementInfo.unit,\n            icon: measurementInfo.icon\n          };\n        }\n      };\n    },\n    gChartForMeasurements: function gChartForMeasurements(state) {\n      return function (name) {\n        if (state.measurements[name].data.length > 1) {\n          return state.measurements[name].data.slice(1);\n        }\n      };\n    }\n  },\n  mutations: {\n    updatePiUrl: function updatePiUrl(state, piUrl) {\n      state.piUrl = piUrl;\n\n      this._vm.$socket.close();\n\n      this._vm.$socket.io.uri = piUrl;\n\n      this._vm.$socket.open();\n    },\n    addDataPoint: function addDataPoint(state, data) {\n      var measurementData;\n\n      try {\n        measurementData = state.measurements[data.name].data;\n      } catch (e) {\n        console.log(\"ERROR: \", e);\n        return;\n      }\n\n      while (measurementData.length > 50) {\n        measurementData.shift();\n      }\n\n      measurementData.push(data.dataPoint);\n    }\n  },\n  actions: {\n    \"SOCKET_buoy_measurement_update\": function SOCKET_buoy_measurement_update(_ref, data) {\n      var commit = _ref.commit;\n      var update = JSON.parse(data);\n      var name = update.name;\n      var value = name !== 'location' ? parseFloat(update.value) : update.value;\n      var time = new Date(update.time);\n      var storeMeasurementName = name.replace(' ', '_');\n      commit('addDataPoint', {\n        name: storeMeasurementName,\n        dataPoint: [time, value]\n      });\n    }\n  }\n});",{"version":3,"sources":["/home/yellow/Developer/OD-buoy/src/store.js"],"names":["Vue","Vuex","use","Store","state","piUrl","measurements","location","name","data","Date","unit","icon","trend","wave_height","wave_period","wave_power","air_temperature","water_temperature","voltage","current","wait_time","getters","measurementNames","Object","keys","trendMeasurementNames","entries","filter","el","map","recentUpdates","result","measurement","forEach","dataPoint","length","push","dtime","value","time","getHours","getMinutes","getSeconds","e","values","sort","a","b","slice","current_value_of_measurement","mostRecentMeasurement","measurementInfo","data_point","gChartForMeasurements","mutations","updatePiUrl","_vm","$socket","close","io","uri","open","addDataPoint","measurementData","console","log","shift","actions","commit","update","JSON","parse","parseFloat","storeMeasurementName","replace"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    piUrl: 'http://localhost:5000',\n    measurements: {\n      location:{\n        name: 'Location',\n        data: [[new Date(), [12.015089, -61.697963]]],\n        unit: '',\n        icon: 'mdi-crosshairs-gps',\n        trend: false,\n      },\n      wave_height:{\n        name: 'Wave Height',\n        data: [[new Date(), 4.1], [new Date(), 4.1]],\n        unit: 'm',\n        icon: 'mdi-current-ac',\n        trend: true\n      },\n      wave_period:{\n        name: 'Wave Period',\n        data: [[new Date(), 3.2], [new Date(), 3.2]],\n        unit: 's',\n        icon: 'mdi-current-ac',\n        trend: true\n      },\n      wave_power:{\n        name: 'Wave Power',\n        data: [[new Date(), 25.8], [new Date(), 25.8]],\n        unit: 'kW/m',\n        icon: 'mdi-current-ac',\n        trend: true\n      },\n      air_temperature: {\n        name: 'Air Temperature',\n        data: [[new Date(), 32.1], [new Date(), 32.1]],\n        unit: '°C',\n        icon: 'mdi-thermometer',\n        trend: true\n      },\n      water_temperature: {\n        name: 'Water Temperature',\n        data: [[new Date(), 16.4], [new Date(), 16.4]],\n        unit: '°C',\n        icon: 'mdi-thermometer',\n        trend: true\n      },\n      voltage: {\n        name: 'Voltage',\n        data: [[new Date(), 5.4], [new Date(), 5.4]],\n        unit: 'V',\n        icon: 'mdi-battery',\n        trend: true\n      },\n      current: {\n        name: 'Current',\n        data: [[new Date(), -200], [new Date(), -200]],\n        unit: 'mA',\n        icon: 'mdi-power-plug',\n        trend: true\n      },\n      wait_time: {\n        name: 'Wait Time',\n        data: [[new Date(), 2], [new Date(), 2]],\n        unit: 's',\n        icon: 'mdi-camera-timer',\n        trend: true\n      },\n    }\n  },\n  getters: {\n    measurementNames: state => {\n      return Object.keys(state.measurements);\n    },\n    trendMeasurementNames: state => {\n      return Object.entries(state.measurements).filter(el=>el[1].trend).map(el=>el[0]);\n    },\n    recentUpdates: state => {\n      let result = [];\n      for (const measurement of Object.values(state.measurements)) {\n        measurement.data.forEach( dataPoint => {\n          if (dataPoint.length < 1) return;\n          try{\n            result.push({\n              name: measurement.name,\n              dtime: dataPoint[0],\n              value: dataPoint[1],\n              time: `${dataPoint[0].getHours()}:${dataPoint[0].getMinutes()}:${dataPoint[0].getSeconds()}`,\n              icon: measurement.icon,\n            })\n          }\n          catch(e){\n            dataPoint[0] = new Date(dataPoint[0]);\n            result.push({\n              name: measurement.name,\n              dtime: dataPoint[0],\n              value: dataPoint[1],\n              time: `${dataPoint[0].getHours()}:${dataPoint[0].getMinutes()}:${dataPoint[0].getSeconds()}`,\n              icon: measurement.icon,\n            })\n          }\n        })\n      }\n      result.sort( (a, b) => {\n        return  new Date(b.dtime) - new Date(a.dtime) ;\n      });\n      return result.slice(0, 20);\n    },\n    current_value_of_measurement: (state) => (name) =>{\n      return state.measurements[name].data.slice(-1)[0][1];\n    },\n    mostRecentMeasurement: state => (name) => {\n      let measurementInfo = state.measurements[name];\n      if(measurementInfo.data.length > 0 && measurementInfo.data[0].length > 0){\n        const data_point = measurementInfo.data.slice(-1)[0];\n        return {time: data_point[0], value:data_point[1], unit: measurementInfo.unit, icon:measurementInfo.icon };\n      }\n    },\n    gChartForMeasurements: (state) => (name) => {\n      if (state.measurements[name].data.length > 1){\n        return state.measurements[name].data.slice(1);\n      }\n    },\n\n  },\n  mutations: {\n    updatePiUrl(state, piUrl){\n      state.piUrl = piUrl;\n      this._vm.$socket.close();\n      this._vm.$socket.io.uri = piUrl\n      this._vm.$socket.open();\n    },\n    addDataPoint(state, data){\n      let measurementData;\n      try {\n        measurementData = state.measurements[data.name].data\n      } catch (e) {\n        console.log(\"ERROR: \", e)\n        return\n      }\n      while(measurementData.length > 50){\n        measurementData.shift();\n      }\n      measurementData.push(data.dataPoint);\n    }\n  },\n  actions: {\n    \"SOCKET_buoy_measurement_update\"({ commit }, data){\n      const update = JSON.parse(data);\n      const name = update.name;\n      const value = name !== 'location' ? parseFloat(update.value): update.value;\n      const time = new Date(update.time);\n      const storeMeasurementName = name.replace(' ', '_');\n      commit('addDataPoint', {\n        name: storeMeasurementName,\n        dataPoint: [time, value],\n      });\n    },\n\n  }\n})\n"]}]}